{"version":3,"file":"query-4bb3ca11.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../node_modules/@tanstack/query-core/build/modern/timeoutManager.js","../../node_modules/@tanstack/query-core/build/modern/utils.js","../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../node_modules/@tanstack/query-core/build/modern/removable.js","../../node_modules/@tanstack/query-core/build/modern/query.js","../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../node_modules/@tanstack/query-core/build/modern/mutationObserver.js","../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js","../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../node_modules/@tanstack/react-query/build/modern/suspense.js","../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../node_modules/@tanstack/react-query/build/modern/useQuery.js","../../node_modules/@tanstack/react-query/build/modern/useMutation.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/timeoutManager.ts\nvar defaultTimeoutProvider = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId)\n};\nvar TimeoutManager = class {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider = defaultTimeoutProvider;\n  #providerCalled = false;\n  setTimeoutProvider(provider) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (this.#providerCalled && provider !== this.#provider) {\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider }\n        );\n      }\n    }\n    this.#provider = provider;\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = false;\n    }\n  }\n  setTimeout(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setTimeout(callback, delay);\n  }\n  clearTimeout(timeoutId) {\n    this.#provider.clearTimeout(timeoutId);\n  }\n  setInterval(callback, delay) {\n    if (process.env.NODE_ENV !== \"production\") {\n      this.#providerCalled = true;\n    }\n    return this.#provider.setInterval(callback, delay);\n  }\n  clearInterval(intervalId) {\n    this.#provider.clearInterval(intervalId);\n  }\n};\nvar timeoutManager = new TimeoutManager();\nfunction systemSetTimeoutZero(callback) {\n  setTimeout(callback, 0);\n}\nexport {\n  TimeoutManager,\n  defaultTimeoutProvider,\n  systemSetTimeoutZero,\n  timeoutManager\n};\n//# sourceMappingURL=timeoutManager.js.map","// src/utils.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/notifyManager.ts\nimport { systemSetTimeoutZero } from \"./timeoutManager.js\";\nvar defaultScheduler = systemSetTimeoutZero;\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = pendingThenable();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = (cancelOptions) => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/removable.ts\nimport { timeoutManager } from \"./timeoutManager.js\";\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { CancelledError, canFetch, createRetryer } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n    if (this.state && this.state.data === void 0) {\n      const defaultState = getDefaultState(this.options);\n      if (defaultState.data !== void 0) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true\n        });\n        this.#initialState = defaultState;\n      }\n    }\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" && // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    this.#retryer?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: \"idle\"\n          });\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    try {\n      const data = await this.#retryer.start();\n      if (data === void 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n          );\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      this.#cache.config.onSuccess?.(data, this);\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error,\n        this\n      );\n      return data;\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          return this.#retryer.promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      this.#dispatch({\n        type: \"error\",\n        error\n      });\n      this.#cache.config.onError?.(\n        error,\n        this\n      );\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error,\n        this\n      );\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n          this.#revertState = action.manual ? newState : void 0;\n          return newState;\n        case \"error\":\n          const error = action.error;\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nimport { timeoutManager } from \"./timeoutManager.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        if (key === \"promise\" && !this.options.experimental_prefetchInRender && this.#currentThenable.status === \"pending\") {\n          this.#currentThenable.reject(\n            new Error(\n              \"experimental_prefetchInRender feature flag is not enabled\"\n            )\n          );\n        }\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = timeoutManager.setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = timeoutManager.setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      timeoutManager.clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      timeoutManager.clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #client;\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.#client = config.client;\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    const mutationFnContext = {\n      client: this.#client,\n      meta: this.options.meta,\n      mutationKey: this.options.mutationKey\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables, mutationFnContext);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this,\n          mutationFnContext\n        );\n        const context = await this.options.onMutate?.(\n          variables,\n          mutationFnContext\n        );\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this,\n        mutationFnContext\n      );\n      await this.options.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        mutationFnContext\n      );\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this,\n        mutationFnContext\n      );\n      await this.options.onSettled?.(\n        data,\n        null,\n        variables,\n        this.state.context,\n        mutationFnContext\n      );\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this,\n          mutationFnContext\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context,\n          mutationFnContext\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this,\n          mutationFnContext\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context,\n          mutationFnContext\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      client,\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const onMutateResult = this.#currentResult.context;\n        const context = {\n          client: this.#client,\n          meta: this.options.meta,\n          mutationKey: this.options.mutationKey\n        };\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(\n            action.data,\n            variables,\n            onMutateResult,\n            context\n          );\n          this.#mutateOptions.onSettled?.(\n            action.data,\n            null,\n            variables,\n            onMutateResult,\n            context\n          );\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(\n            action.error,\n            variables,\n            onMutateResult,\n            context\n          );\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            onMutateResult,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","\"use client\";\n\n// src/IsRestoringProvider.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=IsRestoringProvider.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"@tanstack/query-core\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    const MIN_SUSPENSE_TIME_MS = 1e3;\n    const clamp = (value) => value === \"static\" ? value : Math.max(value ?? MIN_SUSPENSE_TIME_MS, MIN_SUSPENSE_TIME_MS);\n    const originalStaleTime = defaultedOptions.staleTime;\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => clamp(originalStaleTime(...args)) : clamp(originalStaleTime);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(\n        defaultedOptions.gcTime,\n        MIN_SUSPENSE_TIME_MS\n      );\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, noop, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./IsRestoringProvider.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const client = useQueryClient(queryClient);\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`\n      );\n    }\n  }\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions);\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError\n} from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","reactJsxRuntime_production_min","jsxRuntimeModule","Subscribable","listener","defaultTimeoutProvider","callback","delay","timeoutId","intervalId","TimeoutManager","_a","__privateAdd","_provider","_providerCalled","provider","__privateSet","__privateGet","timeoutManager","systemSetTimeoutZero","isServer","noop","functionalUpdate","updater","input","isValidTimeout","value","timeUntilStale","updatedAt","staleTime","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","hashQueryKeyByOptions","partialMatchKey","isActive","matchMutation","mutation","status","mutationKey","hashKey","options","_","val","isPlainObject","result","key","hasOwn","replaceEqualDeep","array","isPlainArray","aSize","bItems","bSize","copy","equalItems","i","aItem","bItem","v","shallowEqualObjects","o","hasObjectPrototype","ctor","prot","sleep","timeout","resolve","replaceData","prevData","data","addToEnd","items","item","max","newItems","addToStart","skipToken","ensureQueryFn","fetchOptions","shouldThrowError","throwOnError","params","FocusManager","_focused","_cleanup","_setup","onFocus","setup","focused","isFocused","focusManager","pendingThenable","reject","thenable","_resolve","_reject","finalize","reason","defaultScheduler","createNotifyManager","queue","transactions","notifyFn","batchNotifyFn","scheduleFn","schedule","flush","originalQueue","args","fn","notifyManager","OnlineManager","_online","onOnline","onlineListener","offlineListener","online","onlineManager","defaultRetryDelay","failureCount","canFetch","networkMode","CancelledError","createRetryer","config","isRetryCancelled","continueFn","isResolved","cancel","cancelOptions","error","cancelRetry","continueRetry","canContinue","canStart","pause","continueResolve","run","promiseOrValue","initialPromise","retry","retryDelay","shouldRetry","Removable","_gcTimeout","newGcTime","Query","_dispatch","_initialState","_revertState","_cache","_client","_retryer","_defaultOptions","_abortSignalConsumed","getDefaultState","defaultState","newData","__privateMethod","dispatch_fn","state","setStateOptions","promise","_b","observer","x","abortController","addSignalProperty","object","fetchFn","queryFn","queryFnContext","queryFnContext2","context","context2","_c","_d","_f","_e","_h","_g","_j","_i","_l","_k","action","reducer","fetchState","newState","hasData","initialDataUpdatedAt","QueryObserver","client","_executeFetch","_updateStaleTimeout","_computeRefetchInterval","_updateRefetchInterval","_updateTimers","_clearStaleTimeout","_clearRefetchInterval","_updateQuery","_notify","_currentQuery","_currentQueryInitialState","_currentResult","_currentResultState","_currentResultOptions","_currentThenable","_selectError","_selectFn","_selectResult","_lastQueryWithDefinedData","_staleTimeoutId","_refetchIntervalId","_currentRefetchInterval","_trackedProps","shouldFetchOnMount","executeFetch_fn","updateTimers_fn","shouldFetchOn","clearStaleTimeout_fn","clearRefetchInterval_fn","prevOptions","prevQuery","updateQuery_fn","mounted","shouldFetchOptionally","updateStaleTimeout_fn","nextRefetchInterval","computeRefetchInterval_fn","updateRefetchInterval_fn","shouldAssignObserverCurrentProperties","onPropTracked","target","defaultedOptions","prevResult","prevResultState","prevResultOptions","queryInitialState","isPlaceholderData","fetchOnMount","fetchOptionally","errorUpdatedAt","skipSelect","placeholderData","selectError","isFetching","isPending","isError","isLoading","nextResult","isStale","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","shouldNotifyListeners","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","notify_fn","nextInterval","notifyOptions","shouldLoadOnMount","field","optimisticResult","infiniteQueryBehavior","pages","direction","oldPages","oldPageParams","currentPage","cancelled","fetchPage","param","previous","page","maxPages","addTo","pageParamFn","getPreviousPageParam","getNextPageParam","oldData","remainingPages","pageParams","lastIndex","Mutation","_observers","_mutationCache","variables","onContinue","mutationFnContext","restored","isPaused","_n","_m","_p","_o","_r","_q","_t","_s","MutationCache","_mutations","_scopes","_mutationId","__privateWrapper","scope","scopeFor","scopedMutations","index","mutationsWithSameScope","firstPendingMutation","foundMutation","defaultedFilters","event","pausedMutations","MutationObserver","_updateResult","_currentMutation","_mutateOptions","updateResult_fn","onMutateResult","QueryCache","_queries","queryHash","queryInMap","queries","QueryClient","_queryCache","_queryDefaults","_mutationDefaults","_mountCount","_unsubscribeFocus","_unsubscribeOnline","cachedData","queryCache","defaultedCancelOptions","promises","defaults","queryDefault","QueryClientContext","React.createContext","useQueryClient","queryClient","React.useContext","QueryClientProvider","children","React.useEffect","jsx","IsRestoringContext","useIsRestoring","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","getHasError","suspense","ensureSuspenseTimers","clamp","originalStaleTime","willFetch","isRestoring","shouldSuspend","fetchOptimistic","useBaseQuery","Observer","isNewCacheEntry","React.useState","shouldSubscribe","React.useSyncExternalStore","React.useCallback","onStoreChange","unsubscribe","useQuery","useMutation","mutate","mutateOptions"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}